version: "3.8"

networks:
  prod:

services:
  web_server:
    image: caddy:latest
    container_name: caddy-main
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data # Caddy uses this to store certificates
      - caddy_config:/config
    depends_on:
      - backend
      - frontend
      - portainer
    networks:
      - prod
    restart: on-failure

  backend:
    container_name: mello-backend
    build:
      context: ./backend
    env_file:
      - ./.env
    networks:
      - prod
    volumes:
      - ./backend:/app
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "backend:172.18.0.4"
    restart: on-failure

  frontend:
    container_name: mello-frontend
    build:
      context: ./frontend
    env_file:
      - ./.env
    networks:
      - prod
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    restart: on-failure

  portainer:
    container_name: mello-portainer
    image: portainer/portainer-ce
    networks:
      - prod
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: on-failure

volumes:
  portainer_data:
  caddy_data:
  caddy_config:
# with nginx instead of caddy

# web_server:
#   image: nginx:stable-alpine
#   container_name: nginx-main
#   ports:
#     - "80:80"
#     - "443:443"
#   volumes:
#     - "./nginx.conf:/etc/nginx/nginx.conf"
#     - "/etc/letsencrypt:/etc/letsencrypt"
#   depends_on:
#     - backend
#     - frontend
#     - portainer
#   networks:
#     - prod
#   restart: on-failure
